name: esgvoc-stack

services:
    haproxy:
        image: haproxy:lts-alpine
        container_name: haproxy
        user: "2000:2000"
        ports:
            - 80:80
        volumes:
            - type: bind
              source: ./haproxy.cfg
              target: /usr/local/etc/haproxy/haproxy.cfg
              read_only: true
        environment:
            - BACKEND_HOSTNAME=${HOSTNAME}
            - FRONTEND_HOSTNAME=${HOSTNAME}
        restart: always

    fprod:
        image: esgvoc-frontend:prod
        container_name: frontend_prod
        user: "2000:2000"
        ports:
            - 3000:3000
        environment:
            - NUXT_API_URL=http://${HOSTNAME}:9999/api/v1
        build:
            context: ../../es-vocab-app
        restart: always

    bprod:
        image: ghcr.io/espri-mod/esgf-vocab-backend
        container_name: backend_prod
        user: "2000:2000"
        ports:
            - 9999:9999
        environment:
            - GUNICORN_CMD_ARGS=--workers=5 --timeout=10
            - GH_WEB_HOOK_SECRET_FILE=/run/secrets/gh_web_hook_secret
        secrets:
            - gh_web_hook_secret
        volumes:
            - type: bind
              source: update
              target: /home/docker/esgvoc-backend/deployment/update
        restart: always

    bdeploy:
        extends: bprod
        image: esgvoc-backend:deploy
        container_name: backend_deploy
        user: "2000:2000"
        ports: !override
            - 8085:9999
        environment: !override
            - GUNICORN_CMD_ARGS=--workers=1 --timeout=10
        build:
            context: "."
        restart: no

    bupdate:
        extends: bprod
        container_name: backend_update
        user: "2000:2000"
        ports: !override
            - 8085:9999
        environment: !override
            - GUNICORN_CMD_ARGS=--workers=1 --timeout=10
        restart: no

secrets:
  gh_web_hook_secret:
    environment: GH_WEB_HOOK_SECRET
