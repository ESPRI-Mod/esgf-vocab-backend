---

concurrency: 20
base: 'http://esgvoc.ipsl.fr'
iterations: 100
rampup: 5

plan:
  - name: Project id
    assign:
      key: project_id
      value: cmip6plus


  - name: Data descriptor id
    assign:
      key: data_descriptor_id
      value: variable


  - name: Collection id
    assign:
      key: collection_id
      value: variable_id


  - name: Term id
    assign:
      key: term_id
      value: airmass


  - name: Value 1
    assign:
      key: value1
      value: airmass


  - name: Value 2
    assign:
      key: value2
      value: acabf


  - name: Value 3
    assign:
      key: value3
      value: aragos


  - name: Value 4
    assign:
      key: value4
      value: bsi


  - name: Search expression
    assign:
      key: expression
      value: IpsL NOT CNES


  - name: DRS directory expression
    assign:
      key: dir_expression
      value: CMIP6Plus/CMIP/NCC/MIROC6/amip/r2i2p1f2/ACmon/od550aer/gn/v20190923


  - name: DRS filename expression
    assign:
      key: file_expression
      value: od550aer_ACmon_MIROC6_amip_r2i2p1f2_gn_201211-201212.nc


  - name: DRS dataset id expression
    assign:
      key: dataset_expression
      value: CMIP6Plus.CMIP.IPSL.MIROC6.amip.r2i2p1f2.ACmon.od550aer.gn

  - name: CMIP6 Stac JSON schema
    request:
      url: /api/v1/apps/jsg/cmip6

  - name: universe URI
    request:
      url: /resource/universe/{{ data_descriptor_id }}/{{ term_id }}


  - name: project URI
    request:
      url: /resource/{{ project_id }}/{{ collection_id }}/{{ term_id }}


  - name: get_all_terms_in_universe
    request:
      url: /api/v1/universe/terms


  - name: get_term_in_universe
    request:
      url: /api/v1/universe/terms/{{ term_id }}


  - name: get_data_descriptor_in_universe
    request:
      url: /api/v1/universe/data_descriptors/{{ data_descriptor_id }}


  - name: get_term_in_data_descriptor
    request:
      url: /api/v1/universe/data_descriptors/{{ data_descriptor_id }}/terms/{{ term_id }}


  - name: get_all_data_descriptors_in_universe
    request:
      url: /api/v1/universe/data_descriptors


  - name: get_all_terms_in_data_descriptor
    request:
      url: /api/v1/universe/data_descriptors/{{ data_descriptor_id }}/terms


  - name: get_all_projects
    request:
      url: /api/v1/projects


  - name: get_project
    request:
      url: /api/v1/projects/{{ project_id }}


  - name: get_term_in_project
    request:
      url: /api/v1/projects/{{ project_id }}/terms/{{ term_id }}


  - name: get_collection_in_project
    request:
      url: /api/v1/projects/{{ project_id }}/collections/{{ collection_id }}


  - name: get_term_in_collection
    request:
      url: /api/v1/projects/{{ project_id }}/collections/{{ collection_id }}/terms/{{ term_id }}


  - name: get_all_terms_in_project
    request:
      url: /api/v1/projects/{{ project_id }}/terms


  - name: get_all_collections_in_project
    request:
      url: /api/v1/projects/{{ project_id }}/collections


  - name: get_all_terms_in_collection
    request:
      url: /api/v1/projects/{{ project_id }}/collections/{{ collection_id }}/terms


  - name: get_collection_from_data_descriptor_in_all_projects
    request:
      url: /api/v1/cross/collections?data_descriptor_id={{ data_descriptor_id }}


  - name: get_collection_from_data_descriptor_in_project
    request:
      url: /api/v1/cross/collections?project_id={{ project_id }}&data_descriptor_id={{ data_descriptor_id }}


  - name: get_term_from_universe_term_id_in_all_projects
    request:
      url: /api/v1/cross/terms?data_descriptor_id={{ data_descriptor_id }}&universe_term_id={{ term_id }}


  - name: get_term_from_universe_term_id_in_project
    request:
      url: /api/v1/cross/terms?project_id={{ project_id }}&data_descriptor_id={{ data_descriptor_id }}&universe_term_id={{ term_id }}


  - name: find_terms_in_universe
    request:
      url: /api/v1/search/terms/universe?expression={{ expression }}


  - name: find_terms_in_data_descriptor
    request:
      url: /api/v1/search/terms/universe?expression={{ expression }}&data_descriptor_id={{ data_descriptor_id }}


  - name: find_terms_in_project
    request:
      url: /api/v1/search/terms/projects?expression={{ expression }}&project_id={{ project_id }}


  - name: find_terms_in_collection
    request:
      url: /api/v1/search/terms/projects?expression={{ expression }}&project_id={{ project_id }}&collection_id={{ collection_id }}


  - name: find_data_descriptors_in_universe
    request:
      url: /api/v1/search/data_descriptors?expression={{ expression }}


  - name: find_collections_in_project
    request:
      url: /api/v1/search/collections?expression={{ expression }}&project_id={{ project_id }}


  - name: find_items_in_universe
    request:
      url: /api/v1/search/items/universe?expression={{ expression }}


  - name: find_items_in_project
    request:
      url: /api/v1/search/items/projects?expression={{ expression }}&project_id={{ project_id }}


  - name: valid_term_in_all_projects
    request:
      url: /api/v1/validation/term?value={{ value1 }}


  - name: valid_term_in_project
    request:
      url: /api/v1/validation/term?value={{ value2 }}&project_id={{ project_id }}


  - name: valid_term_in_collection
    request:
      url: /api/v1/validation/term?value={{ value3 }}&project_id={{ project_id }}&collection_id={{ collection_id }}


  - name: valid_term
    request:
      url: /api/v1/validation/term?value={{ value4 }}&project_id={{ project_id }}&collection_id={{ collection_id }}&term_id={{ term_id }}


  - name: validate_directory
    request:
      url: /api/v1/apps/drs/{{ project_id }}/validation/directory?expression={{ dir_expression }}


#  - name: validate_file_name
#    request:
#      url: /api/v1/apps/drs/{{ project_id }}/validation/filename?expression={{ file_expression }}


#  - name: validate_dataset_id
#    request:
#      url: /api/v1/apps/drs/{{ project_id }}/validation/datasetid?expression={{ dataset_expression }}


#  - name: generate_directory_from_bag_of_terms
#    request:
#      url: /api/v1/apps/drs/{{ project_id }}/generation/terms/directory
#      method: POST
#      body: '["r2i2p1f2", "CMIP", "MIROC6", "CMIP6Plus", "v20190923", "od550aer", "ACmon", "gn", "NCC", "amip"]'

#  - name: generate_directory_from_mapping
#    request:
#      url: /api/v1/apps/drs/{{ project_id }}/generation/mapping/directory
#      method: POST
#      body: '{"member_id": "r2i2p1f2", "activity_id": "CMIP", "source_id": "MIROC6", "mip_era": "CMIP6Plus", "version": "v20190923", "variable_id": "od550aer", "table_id": "ACmon", "grid_label": "gn", "institution_id": "NCC", "experiment_id": "amip"}'
